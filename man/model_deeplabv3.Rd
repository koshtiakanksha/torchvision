% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models-deeplabv3.R
\name{model_deeplabv3}
\alias{model_deeplabv3}
\alias{model_deeplabv3_resnet50}
\alias{model_deeplabv3_resnet101}
\title{DeepLabV3 Models}
\usage{
model_deeplabv3_resnet50(
  pretrained = FALSE,
  progress = TRUE,
  num_classes = 21,
  aux_loss = NULL,
  pretrained_backbone = FALSE,
  ...
)

model_deeplabv3_resnet101(
  pretrained = FALSE,
  progress = TRUE,
  num_classes = 21,
  aux_loss = NULL,
  pretrained_backbone = FALSE,
  ...
)
}
\arguments{
\item{pretrained}{(bool): If TRUE, returns a model pre-trained on ImageNet.}

\item{progress}{(bool): If TRUE, displays a progress bar of the download to
stderr.}

\item{num_classes}{Number of output classes.}

\item{aux_loss}{Logical or NULL. If \code{TRUE}, includes an auxiliary classifier branch.
If \code{NULL} (default), the presence of aux classifier is inferred from pretrained weights.}

\item{pretrained_backbone}{If \code{TRUE} and \code{pretrained = FALSE}, loads
ImageNet weights for the ResNet backbone.}

\item{...}{Other parameters passed to the model implementation.}
}
\description{
Constructs DeepLabV3 semantic segmentation models with a ResNet backbone as
described in \emph{Rethinking Atrous Convolution for Semantic Image
Segmentation}. These models employ atrous spatial pyramid pooling to capture
multi-scale context.
}
\section{Functions}{
\itemize{
\item \code{model_deeplabv3_resnet50()}: DeepLabV3 with ResNet-50 backbone

\item \code{model_deeplabv3_resnet101()}: DeepLabV3 with ResNet-101 backbone

}}
\section{Task}{

Semantic image segmentation with 21 output classes by default (COCO).
}

\section{Input Format}{

The models expect input tensors of shape \code{(batch_size, 3, H, W)}. Typical
training uses 520x520 images.
}

\examples{
\dontrun{
# VOC class names (used by default 21-class COCO/Pascal VOC models)
voc_classes <- c(
  "background", "aeroplane", "bicycle", "bird", "boat", "bottle",
  "bus", "car", "cat", "chair", "cow", "dining table", "dog", "horse",
  "motorbike", "person", "potted plant", "sheep", "sofa", "train", "tv/monitor"
)

model <- model_deeplabv3_resnet50(pretrained = TRUE)
model$eval()
image_batch <- torch::torch_randn(1, 3, 520, 520)
output <- model(image_batch)
predicted_class <- output$out[1, , 260, 260]$argmax()$item() + 1
class_label <- voc_classes[predicted_class]
print(paste("Predicted class at (260, 260):", class_label))


model <- model_deeplabv3_resnet101(
  pretrained = FALSE,
  num_classes = 3,
  aux_loss = TRUE
)
image_batch <- torch::torch_randn(1, 3, 520, 520)
output <- model(image_batch)
# Check output shapes
dim(output$out)  # e.g., (1, 3, 520, 520)
dim(output$aux)  # e.g., (1, 3, 520, 520)
}
}
\seealso{
Other models: 
\code{\link{model_alexnet}()},
\code{\link{model_inception_v3}()},
\code{\link{model_mobilenet_v2}()},
\code{\link{model_resnet}},
\code{\link{model_vgg}}
}
\concept{models}
